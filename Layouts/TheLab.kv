PageLayoutEnv:

# Most important layout is box layout and there are several other widgets like image and sliders look into them and practice to keep in touch 
# with kivy Development. Apart from that Kivy Design file is important to keep all the things clean and tidy


<PageLayoutEnv@PageLayout>:
    # A layout which allows you to have multiple layouts in a horizontal scroll 
    
    MainWidget:
    BoxLayoutEnv:
    AnchorLayoutEnv:
    GridLayoutEnv:
    StackLayoutEnv:
    ScrollviewEnv:




<ScrollviewEnv@ScrollView>:
    StackLayoutEnv:
        size_hint: 1,None
        height: self.minimum_height


<StackLayoutEnv>:
    # Use these orientation for Stack left to right = lr, right to left =rl
    # top to bottom = tb and bottom to top = bt
    #orientation: "rl-tb"
    # padding params works clockwise Left Top Right Bottom
    #padding: ("10dp","10dp","10dp","10dp")
    # We can also provide spacing in element using spacing and prams are as follows vertically and horizontally
    #spacing: ("20dp","20dp")

<GridLayoutEnv@GridLayout>:
    # we have two required parameters for GridLayout which are Columns and Rows
    rows: 4
    cols: 2
    Button:
        text: "1"
        size_hint: .2,.2
    Button:
        text: "2"
        size_hint: .2,.2
    Button:
        text: "3"
        size_hint: .2,.2
    Button:
        text: "4"
        size_hint: .2,.2
    BoxLayoutEnv:
    Button:
        text: "6"
        size_hint: .2,.2
    Button:
        text: "7"
        size_hint: .2,.2
    Button:
        text: "8"
        size_hint: .2,.2

<AnchorLayoutEnv>:
    # Placement tags are anchor_x and anchor_y for horizontal and vertical use each have three parameters
    # right, left and center (center being the default for x)
    # top, bottom and center (center being the default for y)
    # Use another layout to add more widgets as it'll be drawn on the existing one for example use a box layout if you want to use multiple buttons vertically or horizontally

    
    anchor_x: "left"
    anchor_y: "bottom"
    Button:
        text: "A"
        size_hint: .2,.2



<BoxLayoutEnv>:
    orientation: "horizontal"
    # Adding button with .kv files in a layout
    Button:
        text: "A"
        # Size don't work in layouts so we use proportional size hints which is like height and width
        size_hint: .5,.2
        
        # Over ridding the size is easy put width and height as none and use size or width and height properties like as follows
        # size: "100dp", "60dp"
        # width: "60dp"
        # height: "100dp"

        # Moreover we can use custom positions to place buttons or other widgets to our desired positions by using following syntax:
        # pos_hint: x or center_x or right for vertical orientation
        # pos_hint: y or center_y or top for horizontal orientation
        # pos_hint: {"x":.5}
        # pos_hint: {"center_x":.5}
        # pos_hint: {"right":.5}
        # pos_hint: {"y":.5}
        # pos_hint: {"center_y":.5}
        # pos_hint: {"top":.5}

    Button:
        text: "B"
    # Will be using another layout inside of an existing one
    BoxLayout:
        orientation: "vertical"
        spacing: "10dp"
        Button:
            text: "1"
        Button:
            text: "2"
        Button:
            text: "3"
        Button:
            text: "4"
        


# generic Main Widget
<MainWidget>:
    Label:
        text: "Button 1:"
        size:  40,20
        pos:   0,200
        color: 1,0,1,1

    Button:
        text: "Btn_1_wpp"
        size:  400,200
        pos:   100,200

    Button:
        text: "Btn_2"
        size:  "40dp","20dp"
        pos:   "200dp","400dp"